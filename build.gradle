

subprojects {
    group = 'com.coindemo'
    version = '1.0.0'

    buildscript {
        ext {
            springBootVersion = '1.5.2.RELEASE'
            netflixVersion = '1.4.0.RELEASE'
            sleuthVersion = '1.3.0.RELEASE'
        }
        repositories {
            maven{ url 'http://nexus.gi.com/content/groups/public/'}
            maven{ url "http://maven.aliyun.com/nexus/content/groups/public/" }  
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
            classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        }
    }

    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
  


    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        maven{ url 'http://nexus.gi.com/content/groups/public/'}
        maven{ url "http://maven.aliyun.com/nexus/content/groups/public/" }  
    }


    dependencies {
     	compile 'org.projectlombok:lombok:1.16.18'
        compile('org.springframework.boot:spring-boot-starter')
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("net.sourceforge.nekohtml:nekohtml:1.9.22")
        compile("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
        testCompile("org.springframework.boot:spring-boot-starter-test")
        testCompile("junit:junit")
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    

    //maven install to remote repository
    apply plugin: 'maven'
	uploadArchives {
	    repositories {
	        mavenDeployer {
	            // repository(url: "file:///C:/Users/li/.m2/repo"){}
	            repository(url: "http://nexus.gi.com/content/repositories/releases/") {
                    authentication(userName:"admin", password: "xhhl")
                }
                snapshotRepository(url: 'http://nexus.gi.com/content/repositories/snapshots') {
                    authentication(userName: 'Snapshots', password: 'snapshotuserdev');  
                }  
	        }
	    }
	}
}
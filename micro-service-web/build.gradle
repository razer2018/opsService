
jar {
    baseName = 'micro-service-web'
}

apply plugin: 'org.springframework.boot'

dependencyManagement {
     imports {
          mavenBom "org.springframework.cloud:spring-cloud-netflix:${netflixVersion}"
          mavenBom "org.springframework.cloud:spring-cloud-sleuth:${sleuthVersion}"
     }
}

dependencies {
	compile 'io.springfox:springfox-swagger2:2.6.1'
	compile 'io.springfox:springfox-swagger-ui:2.6.1'

    compile 'org.springframework.cloud:spring-cloud-starter-feign'
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("net.sourceforge.nekohtml:nekohtml:1.9.22")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-devtools")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")

    compile project(':micro-service-api')
}

task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect {
                it.toURL().toString().replaceFirst(/file:\/+/, '/')
            }.join(' ')
        }
    }
}

bootRun {
    dependsOn pathingJar
    doFirst {
        classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
    }
}